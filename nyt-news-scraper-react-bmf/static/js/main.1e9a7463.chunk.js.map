{"version":3,"sources":["ArticleCard.js","NytArticles.js","SavedArticleCard.js","SavedNytArticles.js","App.js","serviceWorker.js","index.js"],"names":["ArticleCard","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","articleId","headline","description","originalArticle","articleChangedCb","_this2","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","then","_this3","react_default","a","createElement","key","id","data-id","className","target","rel","href","onClick","saveArticle","Component","NytArticles","articles","refreshArticles","bind","assertThisInitialized","getArticles","r","json","setState","length","map","article","_articleId","_headline","_description","original_article","_original_article","src_ArticleCard","renderCard","SavedArticleCard","removeArticle","SavedNytArticles","savedArticles","src_SavedArticleCard","App","savedNews","data-toggle","data-target","aria-controls","aria-expanded","aria-label","src_SavedNytArticles","src_NytArticles","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1e9a7463.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nconst url = \"https://nyt-news-scraper-react-bmf.herokuapp.com/api/saved-articles\";\n\nclass ArticleCard extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            articleId: props.articleId,\n            headline: props.headline,\n            description: props.description,\n            originalArticle: props.originalArticle\n        };\n\n        this.articleChangedCb = props.articleChangedCb;\n    }\n\n    saveArticle(){\n        fetch(url, {\n                    method: 'POST',\n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({\n                        articleId: this.state.articleId\n                        })\n                   }).then(() => this.articleChangedCb());\n    }\n\n    render(){\n        return(\n        <div key={this.state.articleId} id={\"article-\" + this.state.articleId}>\n                <div data-id={this.state.articleId} className=\"card\">\n                    <div className=\"card-header\">\n                        <h3>\n                            <a className=\"article-link\" target=\"_blank\" rel=\"noopener noreferrer\" href={this.state.originalArticle}>{this.state.headline}</a>\n                            <a className=\"btn btn-success save\" onClick={() => this.saveArticle()}>Save Article</a>\n                        </h3>\n                    </div>\n                    <div className=\"card-body\">{this.state.description}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ArticleCard;","import React, { Component } from 'react';\nimport ArticleCard from './ArticleCard.js';\n\nconst url = \"https://nyt-news-scraper-react-bmf.herokuapp.com/api/articles\";\n\nfunction renderCard(article, articleChangedCb){\n    let articleId = article._articleId;\n    let headline = article._headline;\n    let description = article._description;\n    let original_article = article._original_article;\n\n    return(<ArticleCard key={articleId} articleId={articleId} headline={headline} description={description} originalArticle={original_article} articleChangedCb={articleChangedCb}/>);\n}\n\nclass NytArticles extends Component {\n    constructor(props){\n        super(props);\n\n        this.state={\n            articles: []\n        };\n\n        this.refreshArticles = this.refreshArticles.bind(this);\n    }\n\n    refreshArticles() {\n        this.getArticles();\n    }\n\n    componentDidMount(){\n        this.getArticles();\n    }\n\n    getArticles(){\n        fetch(url).then(r => r.json()).then(a => this.setState({articles: a.articles}));\n    }\n\n    render(){\n        return(<div className=\"container\">\n        <h1>Latest news!</h1>\n    \n    \n        <div id=\"articles\" className=\"container-fluid article-container\">\n            {this.state.articles.length === 0 ? <span>No news available</span> : this.state.articles.map(a => renderCard(a, this.refreshArticles))}\n        </div>\n    </div>);\n    }\n}\n\nexport default NytArticles;","import React, { Component } from 'react';\n\nconst url = \"https://nyt-news-scraper-react-bmf.herokuapp.com/api/saved-articles\";\n\nclass SavedArticleCard extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            articleId: props.articleId,\n            headline: props.headline,\n            description: props.description,\n            originalArticle: props.originalArticle\n        };\n\n        this.articleChangedCb = props.articleChangedCb;\n    }\n\n    removeArticle(){\n        fetch(url, {\n                    method: 'DELETE',\n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify({\n                        articleId: this.state.articleId\n                        })\n                   }).then(() => this.articleChangedCb());\n    }\n\n    render(){\n        return(\n        <div key={this.state.articleId} id={\"article-\" + this.state.articleId}>\n                <div data-id={this.state.articleId} className=\"card\">\n                    <div className=\"card-header\">\n                        <h3>\n                            <a className=\"article-link\" target=\"_blank\" rel=\"noopener noreferrer\" href={this.state.originalArticle}>{this.state.headline}</a>\n                            <a className=\"btn btn-success save\" onClick={() => this.removeArticle()}>Remove Article</a>\n                        </h3>\n                    </div>\n                    <div className=\"card-body\">{this.state.description}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SavedArticleCard;","import React, { Component } from 'react';\nimport SavedArticleCard from './SavedArticleCard.js';\n\nconst url = \"https://nyt-news-scraper-react-bmf.herokuapp.com/api/saved-articles\";\n\nfunction renderCard(article, articleChangedCb){\n    let articleId = article.articleId;\n    let headline = article.headline;\n    let description = article.description;\n    let original_article = article.original_article;\n\n    return(<SavedArticleCard key={articleId} articleId={articleId} headline={headline} description={description} originalArticle={original_article} articleChangedCb={articleChangedCb}/>);\n}\n\nclass SavedNytArticles extends Component {\n    constructor(props){\n        super(props);\n\n        this.state={\n            articles: []\n        };\n\n        this.refreshArticles = this.refreshArticles.bind(this);\n    }\n\n    refreshArticles() {\n        this.getArticles();\n    }\n\n    componentDidMount(){\n        this.getArticles();\n    }\n\n    getArticles(){\n        fetch(url).then(r => r.json()).then(a => this.setState({articles: a.savedArticles}));\n    }\n\n    render(){\n        return(<div className=\"container\">\n        <h1>Saved news</h1>\n    \n    \n        <div id=\"articles\" className=\"container-fluid article-container\">\n            {this.state.articles.length === 0 ? <span>No saved news</span> : this.state.articles.map(a => renderCard(a, this.refreshArticles))}\n        </div>\n    </div>);\n    }\n}\n\nexport default SavedNytArticles;","import React, {Component} from 'react';\nimport './App.css';\nimport NytArticles from './NytArticles.js';\nimport SavedNytArticles from './SavedNytArticles.js';\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            savedNews: false\n        };\n    }\n\n    render() {\n        return (\n            <div>\n                <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\n                    <a className=\"navbar-brand\" href=\"/\">Belen's News Scraper</a>\n                    <button className=\"navbar-toggler\" data-toggle=\"collapse\" data-target=\"#navbarColor01\"\n                            aria-controls=\"navbarColor01\" aria-expanded=\"false\"\n                            aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"/>\n                    </button>\n\n                    <div className=\"collapse navbar-collapse\" id=\"navbarColor01\">\n                        <ul className=\"navbar-nav mr-auto\">\n                            <li className=\"nav-item active\">\n                                <a className=\"nav-link\" href=\"#\" onClick={() => this.setState({savedNews: false})}>Home\n                                    { this.state.savedNews ? null : <span className=\"sr-only\">(current)</span> }\n                                </a>\n                            </li>\n                            <li className=\"nav-item\">\n                                <a className=\"nav-link\" href=\"#\" onClick={() => this.setState({savedNews: true})}>Saved\n                                    Articles\n                                    { this.state.savedNews ? <span className=\"sr-only\">(current)</span> : null }\n                                </a>\n                            </li>\n                        </ul>\n                    </div>\n                </nav>\n\n                <div className=\"jumbotron text-center\">\n                    <div className=\"overlay\">\n                    </div>\n                    <div className=\"background-image\">\n                    </div>\n                    <div className=\"caption\">\n                        <h1>Belen's News Scraper</h1>\n                        <p>The New York Times Edition</p>\n                    </div>\n                </div>\n                { this.state.savedNews ? <SavedNytArticles/> : <NytArticles/> }\n                <footer className=\"footer\">\n                    <div className=\"container\">\n                        <p>Belen's The New York Times Edition News Scraper</p>\n                    </div>\n                </footer>\n\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}